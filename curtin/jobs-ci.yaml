# Ubuntu Server QA Jenkins Jobs
# Copyright (C) 2016 Canonical Ltd.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version..
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

- job:
    name: curtin-ci-trigger
    triggers:
        - timed: H/15 * * * *
    builders:
        - shell: |
            #!/bin/bash -x
            rm -rf *
            launchpadTrigger --lock-name=${JOB_NAME} \
                             --job=curtin-ci \
                             --branch=lp:curtin \
                             --trigger-ci

            exit 0

- job:
    name: curtin-autoland-trigger
    node: metal-amd64
    triggers:
        - timed: H/15 * * * *
    builders:
        - shell: |
            #!/bin/bash
            set -eux

            launchpadTrigger --lock-name=${JOB_NAME} \
                             --job=curtin-autoland-test \
                             --branch=lp:curtin \
                             --autoland

- job:
    name: curtin-ci
    parameters:
        - landing-candidate
        - candidate-revision
        - merge-proposal
        - landing-candidate-branch
        - use-description-for-commit
        - vmtest-parallel
    project-type: matrix
    axes:
      - axis:
          type: slave
          name: nodes
          values:
            - torkoal
            - metal-ppc64el
            - metal-arm64
            - metal-s390x
    auth-token: BUILD_ME
    publishers:
      - archive:
          artifacts: 'output/**'
          excludes: 'output/debug.log, **/*img'
          allow-empty: true
      - trigger-parameterized-builds:
        - project: admin-lp-git-vote
          condition: UNSTABLE_OR_WORSE
          predefined-parameters: |
            MERGE_BRANCH=${landing_candidate}
            MERGE_REVISION=${candidate_revision}
            MERGE_URL=${merge_proposal}
            TEST_RESULT=FAILED
            TEST_URL=${BUILD_URL}
      - trigger-parameterized-builds:
        - project: admin-lp-git-vote
          condition: SUCCESS
          predefined-parameters: |
            MERGE_BRANCH=${landing_candidate}
            MERGE_REVISION=${candidate_revision}
            MERGE_URL=${merge_proposal}
            TEST_RESULT=PASSED
            TEST_URL=${BUILD_URL}
    builders:
        - shell: |
            #!/bin/bash
            set -eux

            rm -rf *
            branch=${landing_candidate//lp:/https://git.launchpad.net/}
            git clone --branch=${landing_candidate_branch} $branch curtin-${BUILD_NUMBER}
            cd curtin-${BUILD_NUMBER}
            git rev-parse HEAD
            git remote add upstream https://git.launchpad.net/curtin
            git fetch upstream --tags

            no_proxy=launchpad.net https_proxy="http://squid.internal:3128" tox

            if [ "$(arch)" == "x86_64" ]; then
                ./tools/jenkins-runner -p${vmtest_parallel} tests/vmtests/test_basic.py:XenialGATestBasic tests/vmtests/test_basic.py:BionicTestBasic
            fi

- job:
    name: curtin-autoland-test
    node: torkoal
    parameters:
      - string:
          name: candidate_revision
          description: Revision of the git branch
      - string:
          name: landing_candidate
          description: Launchpad git repo
      - string:
          name: landing_candidate_branch
          description: Branch name
      - string:
          name: merge_proposal
          description: Merge proposal URL
      - vmtest-parallel
    auth-token: BUILD_ME
    publishers:
      - trigger-parameterized-builds:
        - project: admin-lp-git-autoland
          condition: UNSTABLE_OR_WORSE
          predefined-parameters: |
            MERGE_REVISION=${candidate_revision}
            MERGE_URL=${merge_proposal}
            TEST_RESULT=FAILED
            TEST_URL=${BUILD_URL}
      - trigger-parameterized-builds:
        - project: admin-lp-git-autoland
          condition: SUCCESS
          predefined-parameters: |
            MERGE_REVISION=${candidate_revision}
            MERGE_URL=${merge_proposal}
            TEST_RESULT=PASSED
            TEST_URL=${BUILD_URL}
    builders:
      - shell: |
          #!/bin/bash
          set -eux

          rm -rf *
          git clone lp:curtin
          cd curtin

          git remote add autoland ${landing_candidate}
          git fetch autoland
          git merge autoland/${landing_candidate_branch} --squash
          git commit -m "test commit"

          no_proxy=launchpad.net https_proxy="http://squid.internal:3128" tox

          if [ "$(arch)" == "x86_64" ]; then
              ./tools/jenkins-runner -p${vmtest_parallel} tests/vmtests/test_basic.py:XenialGATestBasic tests/vmtests/test_basic.py:BionicTestBasic
          fi
